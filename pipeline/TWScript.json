{
	"name": "TWScript",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelTruck",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTruck",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Script1",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "DECLARE @cols AS NVARCHAR(MAX),\n        @query AS NVARCHAR(MAX),\n        @createTableQuery AS NVARCHAR(MAX),\n        @monthList AS NVARCHAR(MAX),\n        @month AS NVARCHAR(50);\n\n-- Define the list of months (they should match the column names in dbo.truckscript)\nSET @monthList = 'Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Dicembre';\n\n-- Generate the list of distinct Codigo values to use as pivoted columns\nSET @cols = STUFF((SELECT DISTINCT ',' + QUOTENAME(Codigo)\n                   FROM dbo.truckscript\n                   FOR XML PATH(''), TYPE\n                   ).value('.', 'NVARCHAR(MAX)'), 1, 1, '');\n\n-- Construct the CREATE TABLE statement for dbo.pivot_table\nSET @createTableQuery = 'CREATE TABLE dbo.pivot_table (\n    Division NVARCHAR(50),\n    Sociedad FLOAT,\n    Pais NVARCHAR(50),\n    [Planta / Almacén] NVARCHAR(50),\n    Grupo NVARCHAR(100),\n    Descripción NVARCHAR(255),\n    Month NVARCHAR(50), ' + @cols + '\n);';\n\n-- Execute the CREATE TABLE statement\nEXEC sp_executesql @createTableQuery;\n\n-- Initialize the main query string for inserting data into the pivot table\nSET @query = 'INSERT INTO dbo.pivot_table (Division, Sociedad, Pais, [Planta / Almacén], Grupo, Descripción, Month, ' + @cols + ') ';\n\n-- Loop through each month and create a separate pivot table for each month using UNION ALL\nWHILE LEN(@monthList) > 0\nBEGIN\n    -- Extract the current month from the list\n    SET @month = LEFT(@monthList, CHARINDEX(',', @monthList + ',') - 1);\n    SET @monthList = STUFF(@monthList, 1, LEN(@month) + 1, '');\n\n    -- Build the pivot query for the current month\n    SET @query = @query + '\n        SELECT Division, Sociedad, Pais, [Planta / Almacén], Grupo, Descripción, ''' + @month + ''' AS Month, ' + @cols + '\n        FROM (\n            SELECT Division, Sociedad, Pais, [Planta / Almacén], Grupo, Descripción, Codigo, ' + QUOTENAME(@month) + ' AS MonthValue\n            FROM dbo.truckscript\n        ) AS SourceTable\n        PIVOT (\n            MAX(MonthValue) FOR Codigo IN (' + @cols + ')\n        ) AS PivotTable_' + @month + '\n        UNION ALL ';\nEND;\n\n-- Remove the last UNION ALL to prevent syntax errors\nSET @query = LEFT(@query, LEN(@query) - 10);\n\n-- Execute the dynamic SQL query to insert into dbo.pivot_table\nEXEC sp_executesql @query;\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"annotations": []
	}
}